[versions]
#
# Kotlin - AGP - Gradle - Xcode compatibility:
# https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#version-compatibility
#

# https://github.com/JetBrains/kotlin
kotlin = "2.1.0"
# https://developer.android.com/studio/releases/gradle-plugin
# noinspection AndroidGradlePluginVersion
androidGradlePlugin = "8.8.0"
# https://developer.android.com/jetpack/androidx/releases/activity
androidxActivity = "1.9.3"
# https://developer.android.com/jetpack/androidx/releases/datastore
androidxDataStore = "1.1.2"
# https://github.com/coil-kt/coil
coil = "3.0.4"
# https://github.com/JetBrains/compose-multiplatform
compose-plugin = "1.7.3"
# https://github.com/arkivanov/Decompose
decompose = "3.2.2"
# https://github.com/InsertKoinIO/koin
koin = "4.0.2"
# https://central.sonatype.com/artifact/io.insert-koin/koin-compose/versions
koin-compose = "4.0.2"
# https://github.com/Kotlin/kotlinx-datetime
kotlinxDatetime = "0.6.1"
# https://github.com/Kotlin/kotlinx.serialization
kotlinxSerializationJson = "1.8.0"
# https://github.com/ktorio/ktor
ktor = "3.0.3"
# https://github.com/Kotlin/kotlinx.coroutines
kotlinxCoroutines = "1.10.1"
# https://github.com/square/leakcanary
leakcanary = "2.14"
# https://central.sonatype.com/artifact/org.jetbrains.androidx.lifecycle/lifecycle-viewmodel-compose/versions
lifecycle = "2.9.10+dev2480"
# https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html#jetpack-compose-and-compose-multiplatform-release-cycles
test-composeUi = "1.7.6"


[libraries]
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-dataStore-core = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "androidxDataStore" }
androidx-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "test-composeUi" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "test-composeUi" }
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network-ktor = { group = "io.coil-kt.coil3", name = "coil-network-ktor3", version.ref = "coil" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin-compose" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin-compose" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-test = { group = "io.insert-koin", name = "koin-test", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-mock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
leakcanary = { group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakcanary" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# build-logic dependencies
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "compose-plugin" }


[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# build-logic
hulkdx-kmp-application = { id = "com.hulkdx.findprofessional.kmp.application", version = "unspecified" }
hulkdx-kmp-library = { id = "com.hulkdx.findprofessional.kmp.library", version = "unspecified" }
